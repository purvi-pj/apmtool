<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Add meta tags for mobile and IE -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title> PayPal SPB Tool | APM New Logos </title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/style.css' />
</head>

<body>
    <div class="row">
        <div class="col-4">
            <form id="buttonOptionForm" action="" method="POST">
                <div class="form-group">
                    <label for="environment">SDK Environment</label>
                    <select class="form-control" id="environment" name="environment">
                        <option value="LOCAL">LOCAL</option>
                        <option value="STAGE">STAGE</option>
                        <option value="SANDBOX">SANDBOX</option>
                        <option value="LIVE">LIVE</option>
                        <option value="CUSTOM">CUSTOM (NEW LOGOS)</option>
                    </select>
                </div>
                <div id="hostFormGroup" class="form-group d-none">
                    <label for="host">Custom Host</label>
                    <input type="text" name="host" class="form-control" value="{host}">
                </div>
                <div class="form-group">
                    <label for="currency">Currency</label>
                    <input type="text" name="currency" class="form-control" value="{currency}">
                </div>
                <div class="form-group">
                    <label for="buyerCountry">Buyer Country</label>
                    <input type="text" name="buyerCountry" class="form-control" value="{buyerCountry}">
                </div>
                <div class="form-group">
                    <label for="paymentscheme">Payment Scheme</label>
                    <select class="form-control" id="paymentscheme" name="paymentscheme">
{!                        <option value="alipay">alipay</option>!}
                        <option value="bancontact">bancontact</option>
                        <option value="blik">blik</option>
                        <option value="boletobancario">boletobancario(non-instant)</option>
                        <option value="eps">eps</option>
                        <option value="giropay">giropay</option>
                        <option value="ideal" selected>ideal</option>
                        <option value="mercadopago">mercadopago</option>
                        <option value="mybank">mybank</option>
                        <option value="multibanco">multibanco(non-instant)</option>
                        <option value="oxxo">oxxo(non-instant)</option>
                        <option value="p24">p24</option>
                        <option value="payu">payu</option>
{!                        <option value="poli">poli</option>!}
{!                        <option value="safetypay">safetypay</option>!}
{!                        <option value="satispay">satispay</option>!}
                        <option value="sofort">sofort</option>
                        <option value="trustly">trustly</option>
                        <option value="trustpay">trustpay</option>
                        <option value="verkkopankki">verkkopankki</option>
                        <option value="wechatpay">wechatpay</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="buttonColor">Button Color</label>
                    <select class="form-control" id="buttonColor" name="buttonColor">
                        <option value="">DEFAULT</option>
                        <option value="silver">SILVER</option>
                        <option value="white">WHITE</option>
                        <option value="black">BLACK</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="buttonShape">Button Shape</label>
                    <select class="form-control" id="buttonShape" name="buttonShape">
                        <option value="rect">RECT</option>
                        <option value="pill">PILL</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="buttonLabel">Button Label</label>
                    <select class="form-control" id="buttonLabel" name="buttonLabel">
                        <option value="">DEFAULT</option>
                        <option value="pay">PAY</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="buttonHeight">Button Height (optional)</label>
                    <input type="text" name="buttonHeight" class="form-control" placeholder="25-55" value="{buttonStyle.HEIGHT}">
                </div>
                <button type="submit" class="btn btn-primary mb-2">Render</button>
            </form>
        </div>
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Vertical Buttons (Branded)</h5>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" id="verticalButtonWidth" name="verticalButtonWidth" class="form-control" placeholder="Button Width">
                        </div>
                        <div class="form-group col-md-2">
                            <button id="verticalButtonWidthUpdate" type="button" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" id="verticalButtonBackgroundColor" name="verticalButtonBackgroundColor" class="form-control" placeholder="Background Color">
                        </div>
                        <div class="form-group col-md-2">
                            <button id="verticalButtonBackgroundColorUpdate" type="button" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                    <div id="verticalBackground" style="padding:25px">
                        <!-- Set up a container element for the button -->
                        <div id="paypal-button-container"></div>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Standalone Buttons (Branded)</h5>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" id="standaloneButtonWidth" name="standaloneButtonWidth" class="form-control" placeholder="Button Width">
                        </div>
                        <div class="form-group col-md-2">
                            <button id="standaloneButtonWidthUpdate" type="button" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" id="standaloneButtonBackgroundColor" name="standaloneButtonBackgroundColor" class="form-control" placeholder="Background Color">
                        </div>
                        <div class="form-group col-md-2">
                            <button id="standaloneButtonBackgroundColorUpdate" type="button" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                    <div id="standaloneBackground" style="padding:25px">
                        <!-- Set up a container element for the button -->
                        <div id="paypal-standalone-button-container"></div>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Marks</h5>
                    <!-- Set up a container element for the button -->
                    <div id="paypal-marks-container"></div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Payment Fields (Unbranded)</h5>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" id="fieldsWidth" name="fieldsWidth" class="form-control" placeholder="Fields Width">
                        </div>
                        <div class="form-group col-md-2">
                            <button id="fieldsWidthUpdate" type="button" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" id="fieldsBackgroundColor" name="fieldsBackgroundColor" class="form-control" placeholder="Background Color">
                        </div>
                        <div class="form-group col-md-2">
                            <button id="fieldsBackgroundColorUpdate" type="button" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                    <div id="fieldsBackground" style="padding:25px">
                    <!-- Set up a container element for the button -->
                        <div id="paypal-fields-container"></div>
                    </div>
                </div>

            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Buttons not loading?</h5>
                    <div class="alert alert-warning" role="alert">
                        <p>If you have selected a stage or custom host and buttons are not loading, there may be an issue loading the JS SDK. Verify you are on VPN, click the following link and accept the browser security warning (for Chrome, type `thisisunsafe` anywhere in the new window). After accepting, re-render the buttons. </p>
                        <a href="{brandedSdkUrl}" target="_blank">Click here</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

 <!-- Include the PayPal JavaScript SDK (vertical buttons) -->
    <script data-namespace="paypalVertical" src="{brandedSdkUrl}"></script>

<!-- Include the PayPal JavaScript SDK (vertical buttons) -->
    <script data-namespace="paypalStandalone" src="{brandedSdkUrl}"></script>

    <!-- Include the PayPal JavaScript SDK (vertical buttons) -->
    <script data-namespace="paypalFields" src="{unbrandedSdkUrl}"></script>

    <script>
        paypalVertical.Buttons({

            style: {
                color:   '{buttonStyle.COLOR}',
                shape:   '{buttonStyle.SHAPE}',
                {?buttonStyle.HEIGHT}
                    height:  {buttonStyle.HEIGHT},
                {/buttonStyle.HEIGHT}
                label:   '{buttonStyle.LABEL}'
            },

            createOrder: function(data, actions) {
                return actions.order.create({
                    "intent": "CAPTURE",
                    "purchase_units": [{
                        "amount": {
                            "currency_code": "{prefillValue.currency}",
                            "value": "10.00"
                        },
                        "shipping": {
                            "name": {
                                "full_name": "Vertical Test"
                            }
                        }
                    }],
                    "application_context": {
                        "shipping_preference": "NO_SHIPPING"
                    },
                    "payer": {
                        "phone": {
                            "phone_number": {
                                "national_number": "3225551212"
                            }
                        },
                        "email_address": "apmtool@test.com"
                    }
                });
            },

            onApprove: function(data, actions) {
                return actions.order.capture().then(function(orderData) {
                    console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                    var transaction = orderData.purchase_units[0].payments.captures[0];
                    alert('Transaction '+ transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');
                });
            }
        }).render('#paypal-button-container');

        var fundingArray = [
            paypalStandalone.FUNDING.BANCONTACT,
            paypalStandalone.FUNDING.BLIK,
            paypalStandalone.FUNDING.BOLETO,
            paypalStandalone.FUNDING.EPS,
            paypalStandalone.FUNDING.GIROPAY,
            paypalStandalone.FUNDING.IDEAL,
            paypalStandalone.FUNDING.MERCADOPAGO,
            paypalStandalone.FUNDING.MULTIBLANCO,
            paypalStandalone.FUNDING.MYBANK,
            paypalStandalone.FUNDING.OXXO,
            paypalStandalone.FUNDING.P24,
            paypalStandalone.FUNDING.PAYU,
            paypalStandalone.FUNDING.SOFORT,
            paypalStandalone.FUNDING.TRUSTLY,
            paypalStandalone.FUNDING.VERKKOPANKKI,
            paypalStandalone.FUNDING.WECHATPAY
        ];

        fundingArray.forEach(function(element) {
            var button = paypalStandalone.Buttons({
                style: {
                    color:   '{buttonStyle.COLOR}',
                    shape:   '{buttonStyle.SHAPE}',
                    {?buttonStyle.HEIGHT}height:  {buttonStyle.HEIGHT},{/buttonStyle.HEIGHT}
                    label:   '{buttonStyle.LABEL}'
                },
                fundingSource: element,

                createOrder: function(data, actions) {
                    return actions.order.create({
                        "intent": "CAPTURE",
                        "purchase_units": [{
                            "amount": {
                                "currency_code": "{prefillValue.currency}",
                                "value": "10.00"
                            },
                            "shipping": {
                                "name": {
                                    "full_name": "Standalone Test"
                                }
                            }
                        }],
                        "application_context": {
                            "shipping_preference": "NO_SHIPPING"
                        },
                        "payer": {
                            "phone": {
                                "phone_number": {
                                    "national_number": "3225551212"
                                }
                            },
                            "email_address": "apmtool@test.com"
                        }
                    });
                },

                onApprove: function(data, actions) {
                    return actions.order.capture().then(function(orderData) {
                        console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                        var transaction = orderData.purchase_units[0].payments.captures[0];
                        alert('Transaction '+ transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');
                    });
                }
            });

            if (button.isEligible()) {
                button.render('#paypal-standalone-button-container');
            }

            var mark = paypalFields.Marks({
                fundingSource: element
            });


            if (button.isEligible()) {
                mark.render('#paypal-marks-container');
            }
        });

        var fieldsFundingArray = [
            paypalFields.FUNDING.BANCONTACT,
            paypalFields.FUNDING.BLIK,
            paypalFields.FUNDING.BOLETO,
            paypalFields.FUNDING.EPS,
            paypalFields.FUNDING.GIROPAY,
            paypalFields.FUNDING.IDEAL,
            paypalFields.FUNDING.MERCADOPAGO,
            paypalFields.FUNDING.MULTIBLANCO,
            paypalFields.FUNDING.MYBANK,
            paypalFields.FUNDING.OXXO,
            paypalFields.FUNDING.P24,
            paypalFields.FUNDING.PAYU,
            paypalFields.FUNDING.SOFORT,
            paypalFields.FUNDING.TRUSTLY,
            paypalFields.FUNDING.VERKKOPANKKI,
            paypalFields.FUNDING.WECHATPAY
        ];

        fieldsFundingArray.forEach(function(element) {
            var button = paypalFields.Buttons({
                style: {
                    color:   '{buttonStyle.COLOR}',
                    shape:   '{buttonStyle.SHAPE}',
                    {?buttonStyle.HEIGHT}height:  {buttonStyle.HEIGHT},{/buttonStyle.HEIGHT}
                    label:   '{buttonStyle.LABEL}'
                },
                fundingSource: element,

                createOrder: function(data, actions) {
                    return actions.order.create({
                        "intent": "CAPTURE",
                        "purchase_units": [{
                            "amount": {
                                "currency_code": "{prefillValue.currency}",
                                "value": "10.00"
                            },
                            "shipping": {
                                "name": {
                                    "full_name": "Fields Test"
                                }
                            }
                        }],
                        "application_context": {
                            "shipping_preference": "NO_SHIPPING"
                        },
                        "payer": {
                            "phone": {
                                "phone_number": {
                                    "national_number": "3225551212"
                                }
                            },
                            "email_address": "apmtool@test.com"
                        }
                    });
                },

                onApprove: function(data, actions) {
                    return actions.order.capture().then(function(orderData) {
                        console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                        var transaction = orderData.purchase_units[0].payments.captures[0];
                        alert('Transaction '+ transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');
                    });
                }

            });

            if (button.isEligible()) {
                const fieldsDiv = document.getElementById('paypal-fields-container');

                let newDiv = document.createElement('div');
                newDiv.setAttribute('id', element + '-fields');
                newDiv.className = 'card-body';
                fieldsDiv.append(newDiv);

                paypalFields.PaymentFields({
                    fundingSource: element
                })
                .render(newDiv);

                button.render(newDiv);
            }
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
            integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
            integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
            crossorigin="anonymous"></script>
    <script src="/javascripts/spb.js"></script>
    <script>
            var prefillJSON = {prefillValue|js|s};
    </script>
</body>

</html>